name: "Build and populate cache"
on:
  pull_request:
  push:
  schedule:
    # everyday at 2:51
    - cron:  '51 2 * * *'
jobs:
  tests:
    strategy:
      matrix:
        nurRepo:
          - mic92
        cachixName:
          - mic92
        nixTarball:
          - https://hydra.nixos.org/build/122910321/download/1/nix-2.4pre20200622_334e26b-x86_64-linux.tar.xz
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # Nix Flakes doesn't work on shallow clones
        fetch-depth: 0
    - name: Make more space
      run: sudo rm -rf /opt /usr/local || true &
    - name: Install nix
      run: |
        # Allow binary caches for runner user
        echo "max-jobs = auto" >> /tmp/nix.conf
        echo "trusted-users = root runner" >> /tmp/nix.conf
        echo "experimental-features = nix-command flakes" >> /tmp/nix.conf
        curl ${{matrix.nixTarball }} -o nix.tar.xz
        mkdir -p /tmp/nix/
        tar -xJf nix.tar.xz -C /tmp/nix
        /tmp/nix/*/install --daemon --daemon-user-count $(nproc) --nix-extra-conf-file /tmp/nix.conf --no-channel-add
        echo "::add-path::/nix/var/nix/profiles/per-user/runner/profile/bin"
        echo "::add-path::/nix/var/nix/profiles/default/bin"
    - name: Setup cachix
      run: |
        nix shell '.#cachix' -c cachix use "${{ matrix.cachixName }}"
        echo "::set-env name=CACHIX_SIGNING_KEY::${{ secrets.CACHIX_SIGNING_KEY }}"
    - name: Build nix packages
      run: |
        # TODO fix this NIX_PATH impurities in homemanager
        export NIX_PATH=$(nix eval --raw --impure --expr '"nixpkgs=${(builtins.getFlake (toString ./.)).inputs.nixpkgs}"')
        exitcode=0
        if ! nix-build nixos/ci.nix --show-trace; then
           exitcode=1
        fi
        nix path-info --all --json -r |
          nix shell '.#jq' -c jq -r 'map(select(.ca == null and .signatures == null)) | map(.path) | .[]'
          nix shell '.#cachix' -c cachix push ${{matrix.cachixName}}
        exit $exitcode
