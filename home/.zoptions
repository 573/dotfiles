## -*- shell-script -*-

# {{{ Initialization options
setopt no_all_export      # automagically export defined variables; not recommended
setopt    rcs             # after /etc/zshenv, all rc files are sourced as supposed.
setopt no_global_rcs      # i don't care if global RCs are run; my config is fairly complete.
setopt no_global_export   # export will not be local to functions with this one; don't rely on it.
# }}}

# {{{ Input / Output
setopt    aliases                # expand aliases; you probably want this
setopt no_clobber              # Donâ€™t write over existing files with >, use >! instead
setopt    correct              # try to correct the spelling of commands
setopt no_correct_all          # try to correct every word; this can be dangerous with some commands (e.g. mv)
setopt no_dvorak               # 'correct{,_all}' expect errors that would happen on dvorak keyboards.
setopt no_ignoreeof            # ignore ^D
setopt no_flow_control         # flowcontrol (usually) ^S ^Q
setopt    interactivecomments  # allow comments in interactive shells
setopt    hash_cmds            # save cmd location to skip PATH lookup
setopt    hash_dirs            # hash dirs of executed commands
setopt no_mail_warning         # print warning if a mail file has been accessed since the shell last checked.
setopt    rm_star_wait         # pause before confirming rm *
setopt    short_loops
setopt no_sun_keyboard_hack             ### if a line ends with a backquote, and there are an odd number of
# }}}

# {{{ Expansion
setopt    bad_pattern            # if a pattern or glob is badly formed, print out an error
setopt    bare_glob_qual         # treat trailing set of parentheses as a qualifier list
setopt    brace_ccl              # echo {abc.}file :: .file afile bfile cfile
setopt    case_glob              # make globbing case sensitive
setopt    case_match             # make regular expression matches case sensitive
setopt    equals                 # the mighty =command expansion :)
setopt    extended_glob          # the force is strong with this one...
setopt    glob                   # abso-freakin-lutely
setopt no_glob_assign            # if set, allow 'name=*' and 'name=(*)';
                                 #   since the latter is more clear, i'm unsetting this option
setopt    glob_dots              # find dotfiles easier
setopt no_ignore_braces          # do not perform brace expansion;
setopt no_nomatch                # print an error if a glob didn't return a result
setopt no_magic_equal_subst      # do expansions on everything the looks like an 'name=express' assignment.
setopt no_mark_dirs              # append '/' to dirnames generated by globbing
setopt    numeric_glob_sort      # sort numerically first, before alpha
setopt    rematch_pcre           # use pcre style regular expressions, if pcre is available
setopt    rc_expand_param        # array  expansions of the form `foo${xx}bar', where the parameter
                                 #   'xx' is set to (a b c), are substituted with `fooabar foobbar foocbar'
                                 #   instead of the default `fooa b cbar'.
# }}}

# {{{ History
setopt  no_append_history         # when exiting, append history entries to $HISTFILE, rather
                                 #   than replacing the old file; this is the default
setopt    bang_hist              # enable '!' history expansion
setopt    extended_history       # puts timestamps in the history
setopt    inc_append_history     # append every single command to $HISTFILE immediately after hitting ENTER.
setopt no_hist_allow_clobber     # add '|' to output redirections in the history.
setopt no_hist_beep              # beep? beep yourself!eleven!!
setopt    hist_expire_dups_first # expire duped history first
setopt    hist_ignore_space
setopt    hist_ignore_all_dups
export    histignore="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."
setopt    hist_no_store          # don't save 'history' cmd in history
setopt no_hist_no_functions      # don't add functions to history
setopt    hist_reduce_blanks     # remove unneeded blanks from commands in history
setopt    hist_save_by_copy      # when saving history: DATA => $HISTFILE.new; mv $HISTFILE.new $HISTFILE
                                 #   you normally don't unset this one.
setopt no_hist_subst_pattern     # history substitutions (:s, :&) performed with patterns instead of strings
setopt    hist_verify            # bullet-proof history-expansion
setopt    share_history          # share history between open shells
# }}}

# {{{ Completion
setopt    always_last_prompt  # if zsh prints out a list (eg. on an ambiguous completion), it reuses
                              #   the old prompt instead of printing a new one underneath the list;
                              #   this breaks menucompletion if turned off
setopt no_always_to_end       # if a completion is performed with the cursor within a word, and a full
                              #   completion is inserted, the cursor is moved to the end of the word;
                              #   that is, the cursor is moved to the end of the word if either a
                              #   single match is inserted or menu completion is performed;
                              #   worthless if 'complete_in_word' is off
setopt    auto_list           # autom. list choices on ambiguous completion
setopt    auto_menu           # use menucompletion after the 2nd consecutive completion request;
                              #   overwritten by 'menu_complete'
setopt no_auto_name_dirs      # any parameter that is set to the absolute name of a directory
                              #   immediately becomes a name for that directory; otherwise the
                              #   parameter must be used is the ~parameter form.
setopt    auto_param_slash    # when completing a directory name add a slash instead of a space
setopt    auto_param_keys     # intelligently remove automatically inserted characters when completing
setopt no_bashautolist        # automatically list choices when a completion function is
                              #   called twice in succession
setopt    hash_list_all       # force entire path of a completion to be hashed
setopt no_glob_complete       # enable globbing in completions;
                              #   cycle through globbing matches in a menu (do not insert them right away).
setopt    mark_dirs           # adds slash to end of completed dirs
setopt no_list_beep           # how about --- NO!
setopt    list_rows_first     # completion options left-to-right, top-to-bottom
setopt    list_types          # show file types in list
setopt no_list_packed         # try to make completion lists smaller (but ugly)
setopt no_menu_complete       # always use menu completion
setopt no_rec_exact           # in completion, recognize exact matches even if they are ambiguous.
# }}}

# {{{ Shell emulation options
setopt no_bash_rematch              # use $BASH_REMATCH[] instead of the default $match[]
setopt no_bsd_echo                  # make builtin 'echo' compatible to BSD's 'echo'
setopt no_csh_junkie_history        # i don't get this one :-/
setopt no_csh_junkie_loops          # this enables some history shortcuts, that csh users might be used to
setopt no_csh_junkie_quotes         # change the way "" and '' work to match csh
setopt no_csh_nullcmd               # ignore $NULLCMD and $READNULLCMD; redirection without command will fail.
setopt no_csh_nullglob              # only report an error if _all_ globs for a command fail
setopt no_ksh_arrays                # emulate ksh array handling
setopt no_ksh_autoload              # emulate ksh function autoloading
setopt no_ksh_glob                  # a [\+\*@\?\!] that precedes a pair of parentheses affects globbing.
setopt no_ksh_option_print          # changes the output of setopt without arguments
setopt no_ksh_typeset               # alters the typeset commands to match ksh's behaviour
setopt no_ksh_zero_subscript        # if set, $foo[0] == $foo[1] with ksharrays unset
setopt no_sh_file_expansion         # perform filename expansion (e.g., ~ expansion) before parameter expansion,
                                    #   command substitution, arithmetic expansion and brace expansion. if this
                                    #   option is unset, it is performed after brace expansion, so things
                                    #   like `~$USERNAME' and `~{pfalstad,rc}' will work.
setopt no_sh_glob                   # make globbing more 'sh-like'; please, no!
setopt no_sh_option_letters         # try to interpret single-letter options to set{,opt} like ksh would.
setopt no_sh_nullcmd                # use ':' instead of $NULLCMD and $READNULLCMD
setopt no_sh_word_split             # sh-style wordsplitting; not for me.
setopt no_posix_builtins            # when set, the command 'builtin' can be used to execute shell builtins
setopt no_posix_identifiers         # only allow ASCII characters a-z, A-Z, 0-9 and _ in identifiers
setopt no_traps_async               # handle signals and run traps immediately
# }}}

# {{{ scripts and functions
setopt    c_bases                  # output hex-numbers in '0x1F' format (see 'octal_zeroes')
setopt    debug_before_cmd         # run the DEBUG trap *before* each command
setopt no_err_exit                 # if set, execute ZERR trap and exit if a command returns non-zero
setopt    exec                     # yes, _do_ run the commands i enter.
setopt    eval_lineno              # linenumbers of expressions in 'eval' are tracked seperately
setopt    function_arg_zero        # set ${0} to the function/script name
setopt    local_options            # shell options are to be restored after returning from a shell function
setopt no_local_traps              # similar to 'local_options', but works on traps
setopt    multios
setopt    octal_zeroes             # print octal values the '0741' way
setopt no_verbose                  # print shell input lines as they are read.
setopt no_warn_create_global       # print a warning when creating a global parameter by an assignment
                                   #   in a function - ennoying sometimes
setopt no_xtrace                   # same as 'set -x'
# }}}

# {{{ Changing directories
setopt    autocd                 # if a directoryname is entered like a command, and there is no command
                                 #   of that name; the 'cd' command is executed for that directory
setopt    auto_pushd             # make cd push the old directory to the dirstack
setopt    cdable_vars            # if cd would fail, because the arg is not a dir, try to expand the
                                 #   argument as if it was called the ~expression way
setopt    chase_dots             # _just_don't_lie_to_me_
setopt    chase_links            # _just_don't_lie_to_me_
setopt    pushd_ignore_dups      # Don't push multiple copies of the same directory onto the directory stack.
setopt    pushd_minus            # Exchanges the meanings of `+' and `-' when used with a number to
                                 # specify a directory in the stack.
setopt    pushd_silent           # do not print the dirstack after popd/pushd
setopt    pushd_to_home          # make 'pushd' with no argument, act like 'pushd ${HOME}'
# }}}

# {{{ Job Control
setopt    auto_continue        # Background processes aren't killed on exit of shell
setopt    auto_resume
setopt no_bg_nice              # run background jobs at lower priority
setopt    check_jobs           # report status of bg-jobs if exiting a shell with job control enabled
setopt    long_list_jobs       # list jobs in the long format by default
setopt    monitor              # allow job control; _absolutely_yes_
setopt    notify

# }}}

# {{{ Prompting
setopt    prompt_cr              # print '\r' before printing the prompt.
setopt    prompt_subst           # sub values in prompt
setopt    prompt_sp              # attempt to preserve partial lines (no effect if 'prompt_cr' is unset).
setopt    transient_rprompt      # remove any right prompt from display when accepting a command line.
                                 #   this may be useful with terminals with other cut/paste methods.
# }}}

# {{{ line editor options
setopt  no_beep                          ### beep on error in zle; hell _no_!
setopt  no_overstrike                    ### start zle in overstrike mode
setopt  no_single_line_zle               ### switch of multiline editing; who would want this?
setopt     zle                              ### use the zsh-line-editor
# }}}

# state options {{{

setopt no_privileged       # turn on privileged mode.
setopt no_rc_quotes        # allow the character sequence _''_ to signify a single quote
                           #   within singly quoted strings. note this does not apply in quoted strings
setopt no_restricted       # turn on restricted mode.
setopt no_single_command   # make the shell exit after the first command from stdin
# }}}
# vim:ft=zsh:foldmethod=marker
