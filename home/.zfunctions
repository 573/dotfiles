#!/usr/bin/env zsh
# shell-script -*-

function flash_undelete() {
    cd /proc/$(ps x | awk '/libflashplayer.so\ /{print $1}')/fd && ls -l | grep deleted
}

# From zsh-lovers
# Function Usage: doc packagename

function collectdweb() {
    ~/.gems/bin/visage-app start
}

function webserver() {
    #pushd ~gast && echo "cd to ~gast"
    # dirty hack to get the network interfaces
    # and its local ip address
    ip addr show | grep --color=never --perl-regexp '^\d:|inet'

    avahi-publish-service "Joergs Webserver" _http._tcp 8080 &
    trap "kill $!" SIGINT SIGTERM EXIT
    if [ -n ${commands[webfsd]} ]
    then
            webfsd -F -p 8080
    else
            python -m http.server 8080
    fi
    #popd
}

# {{{ Running programs
function r() {
    $* &>/dev/null &
    disown %%
}

function R() {
    sudo -E $* &>/dev/null &
    disown %%
}

function re() {
    $* &>/dev/null &
    disown %%
    exit
}

function Re() {
    sudo -E $* &>/dev/null &
    disown %%
    exit
}
# }}}

# {{{ src - Bytecompile dotfiles
function src() {
	autoload -U zrecompile
    for file in $HOME/.z{profile,module,aliases,functions,prompt,completion,options} $HOME/.zsh/*
    do
      [[ -r "$file" ]] && zrecompile -p "$file"
      [[ -r "$file.zwc.old" ]] && /bin/rm -f "$file.zwc.old"
    done
    unset file
	. ~/.zshrc
}
# Run this as root
function src_global() {
su --shell=/bin/zsh --command 'autoload -U zrecompile;
	for a in $fpath; do
		[ -d $a ] && zrecompile -p $a.zwc $a/*
	done'

	return 0
}
# }}}

# {{{ Misc

function chpwd { ls }

function ff () { /usr/bin/find . -iname "*$@*" ; }

function {emacs,ee}merge {
    if [ $# -ne 2 ]; then
      echo Usage: $0 local base other
      exit 1
    fi
    local in_shell
    if [[ "$0" == "eemerge" ]]; then
      in_shell="-nw"
    fi
    emacs $in_shell --eval '(ediff-merge "'$1'" "'$2'")'
}

function browse () {
	if [[ $BROWSER == opera ]]; then
		opera -remote "openURL(file://`pwd`/$1,new-page)"
	else
		$BROWSER file://"`pwd`/$1"
	fi
}

function freemem() {
	local LEVEL=3
	case $1 in
		1|2|3)
			LEVEL=$1;;
		-h|--help)
			echo "usage: $0 [LEVEL]
# To free pagecache:
LEVEL=1
# To free dentries and inodes:
LEVEL=2
# To free pagecache, dentries and inodes:
LEVEL=3"

			return 0;;
	esac
	su root -c "sync && echo $LEVEL >> /proc/sys/vm/drop_caches"
}
# }}}
