import sys
import os
from pathlib import Path

# put all code in a fucntion to avoid name polution
def _on_startup():
    # add current directory to import path
    sys.path.insert(0, Path(__file__).resolve().parent)

    $fzf_history_binding = "c-r"     # Ctrl+R
    $fzf_file_binding = "c-t"        # Ctrl+T
    $fzf_find_command = "fd"
    $fzf_find_dirs_command = "fd -t d"
    $XONTRIB_OUTPUT_SEARCH_KEY_BINDING='c-g'

    import xonsh_extensions
    import bincalc

    xontribs = [
       "direnv",
       "prompt_starship",
       "dracula",
       "fzf_widgets",
       "sh",
       "back2dir",
       "bashisms",
       "output_search"
    ]
    xontrib load @(xontribs)

    # xon settings
    $XONSH_AUTOPAIR = True
    $XONSH_HISTORY_BACKEND = "sqlite"
    $HISTCONTROL = "ignoredups"
    $XONSH_COLOR_STYLE = "dracula"

    # cd-ing shortcuts.
    aliases['-'] = 'cd -'
    aliases['..'] = 'cd ..'
    aliases['....'] = 'cd ../..'

    aliases["k"] = "kubectl"
    aliases["tf"] = "terraform"
    aliases["vim"] = "emacseditor"
    aliases["lg"] = "lazygit"
    def command(args) -> None:
        if len(args) == 0:
          return
        only_print = False
        if args[0] == "-v":
            only_print = True
            args.pop()
            if len(args) == 0:
               return 1

        bin = args[0]
        args.pop()
        if only_print:
            which bin
        else:
            $(which -s @(bin)) @(args)

    aliases["command"] = command

    aliases["cheat"] = lambda args: $[command cheat -c @(args) | less]
    def moshlogin() -> None:
       if "no identifies" in $(ssh-add -L):
           ssh-add
       ssh -v eve killall mosh-server
       mosh -A eve.mosh
    aliases["moshlogin"] = moshlogin
    aliases["zcat"] = "zcat -f"
    aliases["dd"] = "dd status=progress"
    aliases["rg"] = lambda args: $[command rg --sort path --pretty --smart-case --fixed-strings @(args) | less]
    $LS_COLORS=$(vivid generate dracula)
    $LESS = "-FXisRM"
    $LESS_TERMCAP_mb = '\033[01;31m'     # begin blinking
    $LESS_TERMCAP_me = '\033[0m'         # end mode
    $LESS_TERMCAP_se = '\033[0m'         # end standout-mode
    $LESS_TERMCAP_so = '\033[01;44;33m'  # begin standout-mode - info box
    $LESS_TERMCAP_ue = '\033[0m'         # end underline
    $LESS_TERMCAP_us = '\033[03;33;146m' # begin underline is now yellow, italic
    #                            |  |----------------- yellow
    #                            |-------------------- italic

    # we don't want to polute the PYTHONPATH with xonsh
    del $PYTHONPATH

_on_startup()
del _on_startup
