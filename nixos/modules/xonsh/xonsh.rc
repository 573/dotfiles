import sys
import os
from pathlib import Path

# put all code in a fucntion to avoid name polution
def _on_startup():
    # add current directory to import path
    sys.path.insert(0, Path(__file__).resolve().parent)

    $fzf_history_binding = "c-r"     # Ctrl+R
    $fzf_file_binding = "c-t"        # Ctrl+T
    $fzf_find_command = "fd"
    $fzf_find_dirs_command = "fd -t d"
    $XONTRIB_OUTPUT_SEARCH_KEY_BINDING='c-g'

    import xonsh_extensions
    import bincalc

    xontribs = [
       "direnv",
       "prompt_starship",
       "dracula",
       "fzf_widgets",
       "sh",
       "back2dir",
       "bashisms",
       "output_search"
    ]
    xontrib load @(xontribs)

    # xon settings
    $XONSH_AUTOPAIR = True
    $XONSH_HISTORY_BACKEND = "sqlite"
    $HISTCONTROL = "ignoredups"
    $XONSH_COLOR_STYLE = "dracula"

    # cd-ing shortcuts.
    aliases['-'] = 'cd -'
    aliases['..'] = 'cd ..'
    aliases['....'] = 'cd ../..'

    aliases["k"] = "kubectl"
    aliases["tf"] = "terraform"
    aliases["vim"] = "emacseditor"
    aliases["lg"] = "lazygit"

    aliases["cheat"] = lambda args: $[$(which -s cheat) -c @(args) | less]
    def moshlogin() -> None:
       if "no identifies" in $(ssh-add -L):
           ssh-add
       ssh -v eve killall mosh-server
       mosh -A eve.mosh
    aliases["moshlogin"] = moshlogin
    aliases["zcat"] = "zcat -f"
    aliases["dd"] = "dd status=progress"
    aliases["rg"] = lambda args: $[$(which -s rg) --sort path --pretty --smart-case --fixed-strings @(args) | less]
    aliases["hm-switch"] = "nix run $HOME/.homesick/repos/dotfiles#hm-switch --"
    aliases["hm-build"] = "nix run $HOME/.homesick/repos/dotfiles#hm-build --"
    aliases["pgrep"] = "pgrep -a"
    aliases["top"] = "htop"
    aliases["dig"] = "q"
    aliases["free"] = "free -m"
    aliases["fuser"] = "fuser -v"

    def dust(args) -> None:
        args.remove("-h")
        args.remove("-s")
        args.remove("-sh")
        $[dust @(args)]

    aliases["du"] = dust
    aliases["df"] = "df -hT"
    aliases["ls"] = "exa --classify --icons"
    aliases["sl"] = "ls"
    aliases["rm"] = "rm -rv"
    aliases["mkdir"] = "mkdir -p"

    def ip(args) -> None:
        if len(args) == 0:
          args=["-br", "a"]
        $[$(which -s ip) -c @(args)]
    aliases["ip"] = ip
    aliases["objdump"] = "objdump -M intel"
    aliases["git"] = "hub"
    aliases["su"] = "su -"
    aliases["gdb"] = "gdb --quiet --args"
    aliases["readelf"] = "readelf -W"
    aliases["vi"] = "vim"
    aliases["xclip"] = "xclip -selection clipboard"
    aliases["cloc"] = "scc"
    aliases["strace"] = "strace -yy"
    aliases["R"] = "R --quiet"
    aliases["diff"] = "-Naur --strip-trailing-cr"
    aliases["grep"] = "grep --binary-files=without-match --directories=skip --color=auto"
    def killp(args) -> None:
        pid_str=$(ps -ef | sed 1d | fzf -m --header='[kill:process]' | awk '{print $2}')
        pids = [s.strip() for s in pid_str.split("\n")]
        if pids[0] == "":
          $[sudo kill -9 @(pids)]
          killp(args)
    aliases["killp"] = killp
    $LS_COLORS=$(vivid generate dracula)
    $LESS = "-FXisRM"
    $LESS_TERMCAP_mb = '\033[01;31m'     # begin blinking
    $LESS_TERMCAP_me = '\033[0m'         # end mode
    $LESS_TERMCAP_se = '\033[0m'         # end standout-mode
    $LESS_TERMCAP_so = '\033[01;44;33m'  # begin standout-mode - info box
    $LESS_TERMCAP_ue = '\033[0m'         # end underline
    $LESS_TERMCAP_us = '\033[03;33;146m' # begin underline is now yellow, italic
    #                            |  |----------------- yellow
    #                            |-------------------- italic

    # we don't want to polute the PYTHONPATH with xonsh
    del $PYTHONPATH


_on_startup()
del _on_startup
