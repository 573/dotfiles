# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config
, lib
, pkgs
, modulesPath
, ...
}:
let
  frameworkFirmware = pkgs.stdenv.mkDerivation rec {
    pname = "framework-firmware-update";
    version = "3.10";
    src = pkgs.fetchzip {
      url = "https://downloads.frame.work/bios/Framework_Laptop_11th_gen_Intel_Core_BIOS_${version}_EFI.zip";
      sha256 = "sha256-hAwwaJQ6hFfn1Zs26ijEQq2SjPk4op4zjjT0/Wt+/MQ=";
      stripRoot = false;
    };
    installPhase = ''
      mkdir $out
      cp H2OFFT-Sx64.efi hx20_capsule_${version}.bin startup.nsh $out
    '';
  };
in
{
  imports = [
    "${modulesPath}/installer/scan/not-detected.nix"
  ];

  # on demand
  services.fwupd.enable = true;
  services.thermald.enable = true;
  services.thermald.configFile = ./thermal-conf.xml.auto;

  boot.loader.systemd-boot.extraFiles = {
    "H2OFFT-Sx64.efi" = "${frameworkFirmware}/H2OFFT-Sx64.efi";
    "startup.nsh" = "${frameworkFirmware}/startup.nsh";
    "hx20_capsule_${frameworkFirmware.version}.bin" = "${frameworkFirmware}/hx20_capsule_${frameworkFirmware.version}.bin";
    "efi/edk2/shell.efi" = "${pkgs.edk2-uefi-shell}/shell.efi";
  };

  # When running this, have a usb stick installer at your hand as it will reset all your NVRAM and boot loader entries!
  boot.loader.systemd-boot.extraEntries."framework-firmware-upgrade.conf" = ''
    title  Framwork Firmware Upgrade
    efi    /efi/edk2/shell.efi
    options startup.nsh
  '';

  # xps
  #boot.initrd.availableKernelModules = [
  #  "xhci_pci"
  #  "ehci_pci"
  #  # required on thinkpad
  #  #"ahci"
  #  "usb_storage"
  #  "sd_mod"
  #  "rtsx_pci_sdmmc"
  #  "nvme"
  #];
  # x13
  #boot.initrd.availableKernelModules = ["xhci_pci" "nvme" "sdhci_pci"];
  # framework
  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "thunderbolt" ];
  boot.kernelModules = [ "kvm-intel" ];

  # for zfs
  networking.hostId = "8425e349";

  hardware = {
    bluetooth.enable = true;
    opengl = {
      enable = true;
      driSupport32Bit = true;
    };
    #pulseaudio = {
    #  enable = true;
    #  package = pkgs.pulseaudioFull;
    #};
  };

  # for pactl
  environment.systemPackages = with pkgs; [ pulseaudio ];

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/SYSTEM";
    fsType = "vfat";
    options = [ "nofail" ];
  };

  fileSystems."/" = {
    device = "zroot/root/nixos";
    fsType = "zfs";
    options = [ "zfsutil" ];
  };

  fileSystems."/home" = {
    device = "zroot/root/home";
    fsType = "zfs";
    options = [ "nofail" "zfsutil" ];
  };

  fileSystems."/home/joerg/Musik/podcasts" = {
    device = "/home/joerg/gPodder/Downloads";
    fsType = "none";
    options = [ "bind" "nofail" ];
  };

  fileSystems."/tmp" = {
    device = "zroot/root/tmp";
    fsType = "zfs";
    options = [ "nofail" "zfsutil" ];
  };

  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.video.hidpi.enable = lib.mkDefault true;
}
