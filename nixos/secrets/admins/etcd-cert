#!/usr/bin/env bash
set -eux -o pipefail

if [[ $# -lt 1 ]]; then
	echo "USAGE: $0 (ca|server|client) [common-name]"
	echo "example: $0 server foo.etcd.thalheim.io"
	exit 1
fi

type="$1"
cn="${2:-}"

dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
workdir=$(mktemp -d)
trap '{ rm -rf "$workdir"; }' EXIT

(
	umask 077
	if [[ "$type" != ca ]]; then
		sops --extract '["etcd-ca"]' -d "$dir/ca-keys.yaml" >"$workdir/ca-key.pem"
	fi
	cat >"$workdir/cert.json" <<EOF
{"CN":"$cn","hosts":[""],"key":{"algo":"ecdsa","size":384}}
EOF
)

gencert() {
	profile="$1"
	hostname="$2"
	cfssl gencert \
		-ca="$dir/etcd-ca.pem" \
		-ca-key="$workdir/ca-key.pem" \
		-config="$dir/etcd-ca-config.json" \
		-profile="$profile" \
		"$(if [[ -n "$hostname" ]]; then echo "-hostname=$cn"; fi)" \
		"$workdir/cert.json"
}

case "$type" in
ca)
	cfssl gencert -initca "$dir/ca-csr.json" | cfssljson -bare ca -
	;;
server)
	gencert server "$cn" | cfssljson -bare "$cn"
	rm "$cn.csr"
	gencert peer "$cn" | cfssljson -bare "$cn-peer"
	rm "$cn-peer.csr"
	;;
client)
	gencert client "" | cfssljson -bare etcd-client
	rm "etcd-client.csr"
	;;
esac
