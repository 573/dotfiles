object ApiUser "mic92-api" {
  password = "@API_PASSWORD@";
  permissions = [ "objects/query/Host", "objects/query/Service" ]
}

object HostGroup "nixos-servers" {
  display_name = "Mic92's Servers"
  assign where host.vars.os == "NixOS"
}

object User "mic92-email" {
  import "generic-user"

  display_name = "Icinga 2 Admin"
  groups = [ "eveadmins" ]

  email = "joerg@thalheim.io"
}

object User "mic92-pushover" {
  import "generic-user"

  display_name = "Icinga 2 Admin"
  groups = [ "eveadmins" ]

  email = "@PUSHOVER_EMAIL@"
}

object UserGroup "eveadmins" {
  display_name = "Eve Admin Group"
}

object Host "eve.thalheim.io" {
  import "eve-host"
  address = "95.216.112.61"
  address6 = "2a01:4f9:2b:1605::1"
  vars.os = "NixOS"
  vars.noagent = true
  vars.notification["mail"] = {
    groups = [ "eveadmins" ]
  }
}

## {{{ Templates

template Service "eve-service" {
  max_check_attempts = 5
  check_interval = 1m
  retry_interval = 30s
  command_endpoint = "icingamaster.bsd.services"
}

## prosody
template Service "eve-tcp4-service" {
  import "eve-service"
  check_command = "tcp"
  vars.tcp_ipv4 = true;
}

template Service "eve-tcp6-service" {
  import "eve-service"
  check_command = "tcp"
  vars.tcp_ipv6 = true;
}

template Service "eve-http-service" {
  import "eve-service"
  check_command = "http"
  vars.http_sni = true
  vars.http_onredirect = "follow"
  vars.http_ssl_force_tlsv1_2 = true
}

template Service "eve-http4-service" {
  import "eve-http-service"
  vars.http_ipv4 = true
}

template Service "eve-http6-service" {
  import "eve-http-service"
  vars.http_ipv6 = true
}

template Service "eve-smtp-service" {
  import "eve-service"
  check_command = "smtp"
  vars.smtp_starttls = true
}

template Service "eve-smtp4-service" {
  import "eve-smtp-service"
  vars.smtp_ipv4 = true
}

template Service "eve-smtp6-service" {
  import "eve-smtp-service"
  vars.smtp_ipv6 = true
}

template Host "eve-host" {
  max_check_attempts = 3
  check_interval = 1m
  retry_interval = 30s
  check_command = "hostalive"
}

## }}}

## {{{ Services
apply Service "SSH v4 (eve)" {
  import "eve-service"
  check_command = "ssh"
  vars.ssh_ipv4 = true
  assign where host.name == "eve.thalheim.io"
}

apply Service "SSH v6 (eve)" {
  import "eve-service"
  check_command = "ssh"
  vars.ssh_ipv6 = true
  assign where host.name == "eve.thalheim.io"
}

apply Service "Rsync v4 (eve)" {
  import "eve-tcp4-service"
  vars.tcp_port = 873
  assign where host.name == "eve.thalheim.io"
}

apply Service "Rsync v6 (eve)" {
  import "eve-tcp6-service"
  vars.tcp_port = 873
  assign where host.name == "eve.thalheim.io"
}

apply Service "Tinc v4 (eve)" {
  import "eve-tcp4-service"
  vars.tcp_port = 655
  assign where host.name == "eve.thalheim.io"
}

apply Service "Tinc v6 (eve)" {
  import "eve-tcp6-service"
  vars.tcp_port = 655
  assign where host.name == "eve.thalheim.io"
}

apply Service "Syncthing v4 (eve)" {
  import "eve-tcp4-service"
  vars.tcp_port = 22000
  assign where host.name == "eve.thalheim.io"
}

apply Service "Syncthing v6 (eve)" {
  import "eve-tcp6-service"
  vars.tcp_port = 22000
  assign where host.name == "eve.thalheim.io"
}

apply Service "Teamspeak FT v4 (eve)" {
  import "eve-tcp4-service"
  vars.tcp_port = 30033
  assign where host.name == "eve.thalheim.io"
}

apply Service "Teamspeak FT v6 (eve)" {
  import "eve-tcp6-service"
  vars.tcp_port = 30033
  assign where host.name == "eve.thalheim.io"
}

apply Service "Teamspeak SQ v4 (eve)" {
  import "eve-tcp4-service"
  vars.tcp_port = 10011
  assign where host.name == "eve.thalheim.io"
}

apply Service "Teamspeak SQ v6 (eve)" {
  import "eve-tcp6-service"
  vars.tcp_port = 10011
  assign where host.name == "eve.thalheim.io"
}

apply Service "SMTP v4 (eve)" {
  import "eve-smtp4-service"
  vars.smtp_port = "25"
  assign where host.name == "eve.thalheim.io"
}

apply Service "SMTP v6 (eve)" {
  import "eve-smtp6-service"
  vars.smtp_port = "25"
  assign where host.name == "eve.thalheim.io"
}

apply Service "SMTPS v4 (eve)" {
  import "eve-tcp4-service"
  vars.tcp_port = "465"
  vars.tcp_ssl = true
  assign where host.name == "eve.thalheim.io"
}

apply Service "SMTPS v6 (eve)" {
  import "eve-tcp6-service"
  vars.tcp_port = "465"
  vars.tcp_ssl = true
  assign where host.name == "eve.thalheim.io"
}

apply Service "SMTP Submission v4 (eve)" {
  import "eve-smtp4-service"
  vars.smtp_port = "587"
  assign where host.name == "eve.thalheim.io"
}

apply Service "SMTP Submission v6 (eve)" {
  import "eve-smtp6-service"
  vars.smtp_port = "587"
  assign where host.name == "eve.thalheim.io"
}

apply Service "IMAP v4 (eve)" {
  import "eve-service"
  check_command = "imap"
  vars.imap_ipv4 = true
  assign where host.name == "eve.thalheim.io"
}

apply Service "IMAP v6 (eve)" {
  import "eve-service"
  check_command = "imap"
  vars.imap_ipv6 = true
  assign where host.name == "eve.thalheim.io"
}

apply Service "IMAPS v4 (eve)" {
  import "eve-service"
  check_command = "imap"
  vars.imap_ipv4 = true
  vars.imap_ssl = true
  vars.imap_port = 993
  assign where host.name == "eve.thalheim.io"
}

apply Service "IMAPS v6 (eve)" {
  import "eve-service"
  check_command = "imap"
  vars.imap_ipv6 = true
  vars.imap_ssl = true
  vars.imap_port = 993
  assign where host.name == "eve.thalheim.io"
}

apply Service "SIEVE v4 (eve)" {
  import "eve-tcp4-service"
  vars.tcp_port = 4190
  assign where host.name == "eve.thalheim.io"
}

apply Service "SIEVE v6 (eve)" {
  import "eve-tcp6-service"
  vars.tcp_port = 4190
  assign where host.name == "eve.thalheim.io"
}

#apply Service "DNS v4 (eve)" {
#  import "eve-service"
#  check_command = "dig"
#  vars.dig_lookup = "chelnok.de"
#  vars.dig_server = host.address
#  assign where host.name == "eve.thalheim.io"
#}
#
#apply Service "DNS v6 (eve)" {
#  import "eve-service"
#  check_command = "dig"
#  vars.dig_lookup = "chelnok.de"
#  vars.dig_server = host.address6
#  vars.dig_ipv6 = true
#  vars.dig_record_type = "AAAA"
#  assign where host.name == "eve.thalheim.io"
#}

apply Service "JABBER C2S (eve)" {
  import "eve-service"
  check_command = "xmpp_cert6"
  vars.ssl_cert_port = "5222"
  vars.ssl_cert_xmpphost = "thalheim.io";
  assign where host.name == "eve.thalheim.io"
}

apply Service "JABBER S2S (eve)" {
  import "eve-service"
  check_command = "xmpp_cert4"
  vars.ssl_cert_port = "5269"
  vars.ssl_cert_xmpphost = "thalheim.io";
  assign where host.name == "eve.thalheim.io"
}

apply Service "JABBER C2S v6 (eve)" {
  import "eve-service"
  check_command = "xmpp_cert6"
  vars.ssl_cert_port = "5222"
  vars.ssl_cert_xmpphost = "thalheim.io";
  assign where host.name == "eve.thalheim.io"
}

apply Service "JABBER S2S v6 (eve)" {
  import "eve-service"
  check_command = "xmpp_cert6"
  vars.ssl_cert_port = "5269"
  vars.ssl_cert_xmpphost = "thalheim.io";
  assign where host.name == "eve.thalheim.io"
}

apply Service "INFLUXDB HTTP v4 (eve)" {
  import "eve-http4-service"
  vars.http_port = 8086
  vars.http_vhost = "influxdb.thalheim.io"
  vars.http_uri = "/ping"
  assign where host.name == "eve.thalheim.io"
}

apply Service "INFLUXDB HTTP v6 (eve)" {
  import "eve-http6-service"
  vars.http_port = 8086
  vars.http_vhost = "influxdb.thalheim.io"
  vars.http_uri = "/ping"
  assign where host.name == "eve.thalheim.io"
}

apply Service "SQUID HTTP v4 (eve)" {
  import "eve-http4-service"
  vars.http_port = 8888
  vars.http_expect = "HTTP/1.1"
  vars.http_sni = false
  vars.http_ssl_force_tlsv1_2 = false
  assign where host.name == "eve.thalheim.io"
}

apply Service "SQUID HTTP v6 (eve)" {
  import "eve-http6-service"
  vars.http_port = 8888
  vars.http_expect = "HTTP/1.1"
  vars.http_sni = false
  vars.http_ssl_force_tlsv1_2 = false
  assign where host.name == "eve.thalheim.io"
}

apply Service "SQUID HTTPS v4 (eve)" {
  import "eve-http4-service"
  vars.http_port = 8889
  vars.http_expect = "HTTP/1.1"
  assign where host.name == "eve.thalheim.io"
}

apply Service "SQUID HTTPS v6 (eve)" {
  import "eve-http6-service"
  vars.http_port = 8889
  vars.http_expect = "HTTP/1.1"
  assign where host.name == "eve.thalheim.io"
}

apply Service "NETDATA v4 (eve)" {
  import "eve-http4-service"
  vars.http_vhost = "netdata.thalheim.io"
  vars.http_expect_body_regex = "netdata dashboard"
  assign where host.name == "eve.thalheim.io"
}

apply Service "NETDATA v6 (eve)" {
  import "eve-http6-service"
  vars.http_vhost = "netdata.thalheim.io"
  vars.http_expect_body_regex = "netdata dashboard"
  assign where host.name == "eve.thalheim.io"
}

apply Service "NETDATA CERTIFICATE (eve)" {
  import "eve-http-service"
  vars.http_vhost= "netdata.thalheim.io"
  vars.http_certificate = "30"
  assign where host.name == "eve.thalheim.io"
}
## }}}
# vim: filetype=conf:foldmethod=marker:expandtab:shiftwidth=2:tabstop=2:softtabstop=2:textwidth=80