workflow:
  rules:
    - if: '$CI_COMMIT_REF_NAME != "last-build"'

stages:
 - eval
 - notify-eval-error
 - build
 - notify-build
 - update-tag

eval:
 stage: eval
 script:
   - nix run github:nix-community/nix-eval-jobs -- --workers 8 --gc-roots-dir $(pwd)/gcroot --flake '.#hydraJobs' > jobs
   - nix run nixpkgs/nixpkgs-unstable#jq -- -r '.attr + " " + .drvPath' < jobs > jobs-parsed
   - |
     echo > generated-config.yml
     while read -r line; do
       IFS=" " read attr drvPath <<< "$line"
       cat >> generated-config.yml <<EOF
       build-$attr:
         stage: build
         retry: 2
         script:
           - nix build --out-link "result-$attr" -L "$drvPath"
           - |
             if [[ -n "$CACHIX_SIGNING_KEY" ]]; then
               nix run nixpkgs/nixpkgs-unstable#cachix -- push ${CACHIX_NAME:-mic92} "result-$attr"
             fi
     EOF
     done < jobs-parsed
 artifacts:
   paths:
     - generated-config.yml

build:
 stage: build
 trigger:
    include:
      - artifact: generated-config.yml
        job: eval
    strategy: depend

notify-eval-error:
  needs: ["eval"]
  stage: notify-eval-error
  when: on_failure
  script:
    - |
        echo "eval failed ${CI_PIPELINE_URL}" | \
          LOGNAME=gitlab nix run github:Mic92/nur-packages#ircsink -- --nick=gitlab --server=irc.r --target="#xxx" || true

notify-failure:
  needs: ["build"]
  stage: notify-build
  when: on_failure
  script:
    - |
        echo "build failed ${CI_PIPELINE_URL}" | \
          LOGNAME=gitlab nix run github:Mic92/nur-packages#ircsink -- --nick=gitlab --server=irc.r --target="#xxx" || true

notify-success:
  needs: ["build"]
  stage: notify-build
  when: on_success
  script:
    - |
        echo "build succeeded ${CI_PIPELINE_URL}" | \
          LOGNAME=gitlab nix run github:Mic92/nur-packages#ircsink -- --nick=gitlab --server=irc.r --target="#xxx" || true

update-tag:
  stage: update-tag
  script:
    - |
      if [[ -n "$GITHUB_TOKEN" ]]; then
        set -x
        meta=$(jq -cs '. | map({(.attr) : . })| add' < jobs)
        git -c "user.name=GitLab CI" -c "user.email=git@gitlab.com" tag -f "last-build" -m "last-build\n\n$meta"
        git push --force "https://Mic92:${GITHUB_TOKEN}@github.com/Mic92/${CI_PROJECT_NAME}.git" last-build
      else
        echo "no github token set"
      fi
