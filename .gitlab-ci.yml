stages:
 - eval
 - build

eval:
 stage: eval
 script:
   - nix run github:nix-community/nix-eval-jobs -- --workers 8 --gc-roots-dir $(pwd)/gcroot --flake '.#hydraJobs' > jobs
   - nix run nixpkgs/nixpkgs-unstable#jq -- -r '.attr + " " + .drvPath' < jobs > jobs-parsed
   - |
     echo > generated-config.yml
     while read -r line; do
       IFS=" " read attr drvPath <<< "$line"
       cat >> generated-config.yml <<EOF
       build-$attr:
         stage: build
         script:
           - nix build -L "$drvPath"
     EOF
     done < jobs-parsed
 artifacts:
   paths:
     - generated-config.yml

build:
 stage: build
 trigger:
    include:
      - artifact: generated-config.yml
        job: eval
    strategy: depend



#build-job:
#  stage: build
#  script:
#    - nix run nixpkgs/nixpkgs-unstable#jq -- -r '.drvPath' < jobs | xargs -n1 -P$(nproc) nix build -L
#    - |
#      if [[ -n "$CACHIX_SIGNING_KEY" ]]; then
#        realpath result* | nix run nixpkgs/nixpkgs-unstable#cachix -- push ${CACHIX_NAME:-mic92}
#      fi
#    - |
#      if [[ -n "$GITHUB_TOKEN" ]]; then
#        set -x
#        meta=$(jq -cs '. | map({(.attr) : . })| add' < jobs)
#        git -c "user.name=GitLab CI" -c "user.email=git@gitlab.com" tag -f "last-build" -m "last-build\n\n$meta"
#        git push --force "https://Mic92:${GITHUB_TOKEN}@github.com/Mic92/${CI_PROJECT_NAME}.git" last-build
#      else
#        echo "no github token set"
#      fi
#  retry: 2
#  rules:
#    - if: '$CI_COMMIT_REF_NAME != "last-build"'
#  after_script:
#    - |
#       echo "build ${CI_JOB_URL}: $CI_JOB_STATUS" | \
#         LOGNAME=gitlab nix run github:Mic92/nur-packages#ircsink -- --nick=gitlab --server=irc.r --target="#xxx"
